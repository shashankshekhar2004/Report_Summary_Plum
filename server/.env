PORT=8000

GEMINI_API_KEY="AIzaSyAd7btHoEWeJvMJgAyPdlH00ed5tIeTcBw"
GEMINI_API=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent

NORMALISING_PROMPT=" Standardize names, units of test, ranges ,and normal range from the internet if not given, and status for each test in this prompt and don't give unnecessary results other then mentioned and don't predict anything in very small pretty json format"

SUMMARY_PROMPT= "generate a small human understandable summary for each test in very small pretty json format don't predict anything if not given in the input don't suggest also"

RESULT_PROMPT="combine the lower paragraph such that a small summary and test results(name of each test , unit ,normal range) both are there nothing is missed and don't predict anything in very small pretty json format also dont use abbreviation in summary,
one more thing if it is not related to medical tests or reports give output as it is not related to medical reports "


# FOR_TEXT_PRESCRIPTION_PROMPT="return the summary of the input with test name ,value,unit of test ,status,normal
#  range and a overall summary in one line If something is missing find it from net  and give in short and crisp and don't give advices at all and give in json format and don't predict any disease or anything "

# FOR_FILE_PRESCRIPTION_PROMPT="return the summary of the input with test name ,value,unit of test,status,normal range and a summary If something is missing find it from net 
#  and give in short and crisp and don't give advices at all and give in json format and don't predict any disease or anything and at the end an ovearall human readable summary with a small description about each test "

# FOR_TEXT_PRESCRIPTION_PROMPT="Give me a summary of the above text int this format"name":"Hemoglobin","value":10.2,"unit":"g/dL","status":"low"
#  ,"ref_range":{"low":12.0,"high":15.0} for every aspect in the above input"

# FOR_TEXT_PRESCRIPTION_PROMPT=Extract all medical test results from the following input. Return ONLY valid raw JSON (no markdown, no code fences, no explanations). The JSON must strictly follow this structure: { "tests":[{"name":"<test name>","value":<numeric value>,"unit":"<unit>","status":"<low|normal|high>","ref_range":{"low":<low_ref or null>,"high":<high_ref or null>}}], "summary":"<short natural language summary>", "status":"ok"} Input: 


